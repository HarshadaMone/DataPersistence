package main.problem;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

import javax.management.OperationsException;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;

public class Solution {

	public static void main(String[] args) throws IOException, ParseException{
		
		Solution s = new Solution();
		Options option = new Options();
		option.addOption("clear_cache",false,"Clear persisted values on startup");
		option.addOption("file",true,"Read from file");
		KeyValueStore kvs = new KeyValueStore();
		BufferedReader br = null;
		boolean flag = true;
		String inputCommand = null;
		while(inputCommand != "QUIT"){
			
			CommandLineParser clp = new DefaultParser();
			CommandLine cl = clp.parse(option, args);
			if(cl.hasOption("clear_cache")) {
				kvs.reset();
			}
			else if(cl.hasOption("file")){
				String path = cl.getOptionValue("file");
				File file = new File(path);
				br = new BufferedReader(new FileReader(file));
				String userInput;	
				while (( userInput = br.readLine()) != null) {
					inputCommand = s.performOperation(userInput, kvs);
				} 
				
				
			}else{
				br = new BufferedReader(new InputStreamReader(System.in));
				String userInput = br.readLine();
				inputCommand = s.performOperation(userInput, kvs);
			}
			
			
			
		}
		
	}
	
	public String performOperation(String userInput,KeyValueStore kvs){
		
		String[] input = userInput.split(" ");
		String[] keyVal;
		switch(input[0]){
			
			case "CREATE" : keyVal = input[1].split("=");
							kvs.create(keyVal[0], keyVal[1]);
							break;
		
			case "UPDATE" : keyVal = input[1].split("=");
							kvs.update(keyVal[0], keyVal[1]);
							break;							
			
			case "GET" : 	kvs.get(input[1]);
							break;
			
			case "DELETE" : kvs.delete(input[1]);
							break;
			
			case "GETALL" : kvs.getAll();
							break;
							
			case "QUIT" : 	break;
							
			default : System.out.println("Enter valid input");
		}
		
		
		return input[0];
	}
}
